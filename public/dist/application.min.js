"use strict";var ApplicationConfiguration=function(){var applicationModuleName="onTappApp",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","uiGmapgoogle-maps","geolocation","angularSpinner"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("beers"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("nearby"),ApplicationConfiguration.registerModule("ratings"),ApplicationConfiguration.registerModule("users"),angular.module("beers").config(["$stateProvider",function($stateProvider){$stateProvider.state("beer",{url:"/beer/:beerId",templateUrl:"modules/beers/views/beer.client.view.html"}).state("beers",{url:"/beers/:breweryId",templateUrl:"modules/beers/views/beers.client.view.html"})}]),angular.module("beers").controller("BeerController",["$scope","Beer","$stateParams",function($scope,Beer,$stateParams){$scope.beerId=$stateParams.beerId,Beer.getData($scope.beerId).success(function(results){$scope.beer=results.data||"Request failed"})}]),angular.module("beers").controller("BeersController",["$scope","Beers","$stateParams","Ratings","$location",function($scope,Beers,$stateParams,Ratings,$location){function sortOn(collection,name){collection.sort(function(a,b){return a[name]<=b[name]?-1:1})}$scope.groupBy=function(attribute){$scope.groups=[],sortOn($scope.beers,attribute);for(var groupValue="_INVALID_GROUP_VALUE_",i=0;i<$scope.beers.length;i++){var group,beer=$scope.beers[i];beer[attribute]!==groupValue&&(group={label:beer[attribute],beers:[]},groupValue=group.label,$scope.groups.push(group)),group.beers.push(beer)}},$scope.beers=[],$scope.groups=[],$scope.breweryId=$stateParams.breweryId;var handleSuccess=function(data){$scope.beers=data.data,$scope.groupBy("availableId")};Beers.getData($scope.breweryId).success(handleSuccess),$scope.rate=0,$scope.max=5,$scope.isReadonly=!1,$scope.hoveringOver=function(value){$scope.overStar=value,$scope.percent=100*(value/$scope.max)},$scope.ratingStates=[{stateOn:"glyphicon-star",stateOff:"glyphicon-star-empty"}],$scope.create=function(index){var rating=new Ratings({beerId:$scope.beers[index].id,name:$scope.beers[index].name,stars:this.rate,styleName:$scope.beers[index].style.name});rating.$save(function(response){$location.path("ratings/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("beers").factory("Beer",["$http",function($http){return{getData:function(beerId){return $http.get("/beer/"+beerId)}}}]),angular.module("beers").factory("Beers",["$http","$resource",function($http){return{getData:function(breweryId){return $http.get("/beers/"+breweryId)}}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("search",{url:"/search/:page/:keyword/:searchtype",templateUrl:"modules/core/views/search.client.view.html"}).state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","$state",function($scope,Authentication,Menus,$state){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.results=[],$scope.totalResults=void 0,$scope.search=function(currentPage){currentPage=currentPage||1,$state.go("search",{page:currentPage,keyword:$scope.keyword,searchtype:$scope.searchType})}}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("SearchController",["$scope","Search","$stateParams","$state",function($scope,Search,$stateParams,$state){$scope.results=[],Search.getData($stateParams.keyword,$stateParams.page,$stateParams.searchtype).success(function(response,status){$scope.status=status,200===$scope.status?void 0!==response.totalResults?($scope.numberOfPages=response.numberOfPages,$scope.totalResults=response.totalResults,$scope.keyword=$stateParams.keyword,$scope.currentPage=$stateParams.page,$scope.searchType=$stateParams.searchtype,$scope.results=response.data):($scope.totalResults=0,$scope.numberOfPages=0):$scope.results=response||"Request failed"}),$scope.search=function(currentPage){currentPage=currentPage||1,$state.go("search",{page:currentPage,keyword:$scope.keyword,searchtype:$scope.searchType})}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("Search",["$http",function($http){return{getData:function(keyword,page,searchtype){return $http.get("/search/"+keyword+"/"+page+"/"+searchtype)}}}]),angular.module("nearby").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Nearby","nearby","/nearby")}]),angular.module("nearby").config(["$stateProvider","uiGmapGoogleMapApiProvider",function($stateProvider,uiGmapGoogleMapApiProvider){$stateProvider.state("brewery",{url:"/brewery/:breweryId",templateUrl:"modules/nearby/views/brewery.client.view.html"}).state("nearby",{url:"/nearby",templateUrl:"modules/nearby/views/nearby.client.view.html"}),uiGmapGoogleMapApiProvider.configure({key:"AIzaSyAQHm36O2gZr34HkBjElKYHox3LVWR8UWY",v:"3.17",libraries:"weather,geometry,visualization"})}]),angular.module("nearby").controller("BreweryController",["$scope","Brewery","$stateParams",function($scope,Brewery,$stateParams){$scope.breweryId=$stateParams.breweryId;var holdSocial=[];Brewery.getData($scope.breweryId).success(function(results){$scope.brewery=results.data||"Request failed";for(var i=0;i<$scope.brewery.socialAccounts.length;i++){var tempSocial=$scope.brewery.socialAccounts[i];[1,2,3,8,10,14,15,16].indexOf(tempSocial.socialMediaId)>-1&&holdSocial.push(tempSocial)}$scope.socialMedia=holdSocial})}]),angular.module("nearby").controller("NearbyController",["$scope","Breweries","geolocation","$stateParams","uiGmapLogger","$anchorScroll","$location","usSpinnerService",function($scope,Breweries,geolocation,$stateParams,uiGmapLogger,$anchorScroll,$location,usSpinnerService){uiGmapLogger.doLog=!0,$scope.breweries=[],$scope.coords={};var handleSuccess=function(data){data.data?($scope.breweries=data.data,placeMarker()):$scope.breweries=[{brewery:{name:"Sorry",description:"No breweries nearby"}}],usSpinnerService.stop("spinner-1")};geolocation.getLocation().then(function(data){$scope.coords={lat:data.coords.latitude,"long":data.coords.longitude},$scope.map={center:{latitude:$scope.coords.lat,longitude:$scope.coords["long"]},zoom:12},$scope.windowOptions={visible:!0},curLocationMarker(),Breweries.getData($scope.coords).success(handleSuccess)});var curLocationMarker=function(){$scope.marker={id:"curLoc",coords:{latitude:$scope.coords.lat,longitude:$scope.coords["long"]},options:{animation:"DROP"}}};$scope.windowOptions={visible:!0},$scope.onClick=function(){$scope.windowOptions.visible=!$scope.windowOptions.visible},$scope.closeClick=function(){$scope.windowOptions.visible=!1},$scope.title="You are here!",$scope.clickEventsObject={mouseover:function(marker,e,model){model.mouseOver()},mouseout:function(marker,e,model){model.mouseOut()}},$scope.allMarkers=[];var createMarker=function(i,lat,lng,name,breweryId){var ret={id:i,breweryId:breweryId,latitude:lat,longitude:lng,title:name,icon:"/modules/nearby/images/beer-icon.png",show:!1};return ret.onClick=function(){ret.show=!ret.show},ret.mouseOver=function(){ret.show=!ret.show,$scope.gotoAnchor(breweryId)},ret.mouseOut=function(){ret.show=!ret.show},ret},placeMarker=function(){for(var markers=[],i=0;i<$scope.breweries.length;i++){var lat=$scope.breweries[i].latitude,lng=$scope.breweries[i].longitude,name=$scope.breweries[i].brewery.name,breweryId=$scope.breweries[i].brewery.id;markers.push(createMarker(i,lat,lng,name,breweryId))}$scope.allMarkers=markers};$scope.gotoAnchor=function(x){var newHash="anchor"+x;$location.hash()!==newHash?$location.hash("anchor"+x):$anchorScroll()}}]),angular.module("nearby").run(["$anchorScroll",function($anchorScroll){$anchorScroll.yOffset=50}]),angular.module("nearby").factory("Breweries",["$http",function($http){return{getData:function(coords){return $http.get("/breweries/"+coords.lat+"/"+coords["long"])}}}]),angular.module("nearby").factory("Brewery",["$http",function($http){return{getData:function(breweryId){return $http.get("/brewery/"+breweryId)}}}]),angular.module("ratings").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Ratings","ratings","/ratings(/create)?")}]),angular.module("ratings").config(["$stateProvider",function($stateProvider){$stateProvider.state("listRatings",{url:"/ratings",templateUrl:"modules/ratings/views/list-ratings.client.view.html"}).state("viewRating",{url:"/ratings/:ratingId",templateUrl:"modules/ratings/views/view-rating.client.view.html"}).state("editRating",{url:"/ratings/:ratingId/edit",templateUrl:"modules/ratings/views/edit-rating.client.view.html"})}]),angular.module("ratings").controller("RatingsController",["$scope","$stateParams","$location","Authentication","Ratings","StyleQuery",function($scope,$stateParams,$location,Authentication,Ratings,StyleQuery){$scope.authentication=Authentication,$scope.remove=function(rating){if(rating){rating.$remove();for(var i in $scope.ratings)$scope.ratings[i]===rating&&$scope.ratings.splice(i,1)}else $scope.rating.$remove(function(){$location.path("ratings")})},$scope.update=function(){var rating=$scope.rating;rating.$update(function(){$location.path("ratings/"+rating._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.ratings=Ratings.query()},$scope.findOne=function(){$scope.rating=Ratings.get({ratingId:$stateParams.ratingId}),$scope.rating.$promise.then(function(data){getStars(data.stars),getRecommendations(data.styleName)})},$scope.stars=[];var getStars=function(noOfStars){for(var i=0;noOfStars>i;i++)$scope.stars.push(i)},getRecommendations=function(styleName){StyleQuery.getStyle(styleName).success(handleSuccess)};$scope.recommendations=[];var handleSuccess=function(data){$scope.recommendations=data.data}}]),angular.module("ratings").factory("Ratings",["$resource",function($resource){return $resource("ratings/:ratingId",{ratingId:"@_id"},{update:{method:"PUT"}})}]),angular.module("ratings").factory("StyleQuery",["$http",function($http){return{getStyle:function(styleName){return $http.get("/style/"+styleName)}}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);